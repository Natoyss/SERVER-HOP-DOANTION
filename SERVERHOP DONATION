-- Assuming you have a basic UI for the server hop button and draggable functionality

local Player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TPService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")
local pcall = pcall

-- UI Setup (example)
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = Player:WaitForChild("PlayerGui")
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 50)
frame.Position = UDim2.new(0.5, -100, 0.5, -25)
frame.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
frame.Parent = screenGui

local button = Instance.new("TextButton")
button.Text = "Server Hop"
button.Size = UDim2.new(0, 200, 0, 50)
button.Position = UDim2.new(0, 0, 0, 0)
button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
button.Parent = frame

local lastExecutionTime = 0
local hopDelay = 60 -- Delay between server hops (seconds)

-- Function to teleport to another server with error handling
local function serverHop()
    local success, message = pcall(function()
        -- List of place IDs to server hop to
        local placeIds = {8737602449, 8943844393}
        
        -- Randomly pick a server and teleport
        local chosenPlaceId = placeIds[math.random(1, #placeIds)]
        
        -- Check if teleportation service is available
        if TPService then
            TPService:Teleport(chosenPlaceId, Player)
        else
            error("TeleportService is not available")
        end
        
        -- Save the time of the last server hop
        lastExecutionTime = os.time()
    end)
    
    -- If an error occurs, print it
    if not success then
        warn("Error during server hop: " .. message)
    end
end

-- Function to handle the draggable UI
local dragging = false
local dragInput, dragStart, startPos
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
    end
end)

frame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Button click to initiate server hop
button.MouseButton1Click:Connect(function()
    serverHop()
end)

-- Auto-execute every minute with error handling and delay
while true do
    task.wait(hopDelay)  -- Wait for specified delay time
    pcall(function()
        serverHop()    -- Execute server hop
    end)
end
